// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// generator client {
//   provider = "prisma-client-js"
// }

// datasource db {
//   provider = "postgresql"
//   url      = env("DATABASE_URL")
// }

// datasource db {
//   provider = "mysql"
//   url      = env("DATABASE_URL")
// }

// generator client {
//   provider = "prisma-client-js"
// }

// model Player {
//   id            Int      @id @default(autoincrement())
//   name          String
//   university    String
//   battingRuns   Int
//   ballsFaced    Int
//   wickets       Int
//   isFromDataset Boolean  @default(true)
// }

// model User {
//   id          Int      @id @default(autoincrement())
//   username    String   @unique
//   password    String
//   budget      Int      @default(9000000)
//   teamPlayers Json?
//   role        String   @default("USER")
//   leaderboard Leaderboard?
// }

// model Leaderboard {
//   userId      Int     @unique
//   totalPoints Float
//   user        User    @relation(fields: [userId], references: [id])
// }

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Player {
  id          Int      @id @default(autoincrement())
  name        String
  university  String
  role        String
  value       Int
  batting     Json?
  bowling     Json?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Team {
  id        Int      @id @default(autoincrement())
  userId    Int
  playerIds Json
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("teams")
}

model Leaderboard {
  id      Int    @id @default(autoincrement())
  rank    Int
  username String
  points  Int
}